const { DefaultAzureCredential } = require("@azure/identity");
const { AuthorizationManagementClient, SubscriptionClient } = require("@azure/arm-subscriptions");
const { Client } = require("@microsoft/microsoft-graph-client");

// Initialize Azure credentials
const credential = new DefaultAzureCredential();

// Function to get all subscriptions in the tenant
async function getAllSubscriptions() {
    const subscriptionClient = new SubscriptionClient(credential);
    const subscriptions = [];
    for await (const subscription of subscriptionClient.subscriptions.list()) {
        subscriptions.push(subscription.subscriptionId);
    }
    return subscriptions;
}

// Function to get disabled Azure AD users
async function getDisabledUsers() {
    const graphClient = Client.initWithMiddleware({
        authProvider: {
            getAccessToken: async () => {
                const tokenResponse = await credential.getToken("https://graph.microsoft.com/.default");
                return tokenResponse.token;
            },
        },
    });

    const users = await graphClient.api("/users").select("id,displayName,userPrincipalName,accountEnabled").get();
    return users.value.filter(user => user.accountEnabled === false);
}

// Function to get all role assignments for a subscription
async function getRoleAssignments(subscriptionId) {
    const authClient = new AuthorizationManagementClient(credential, subscriptionId);
    const roleAssignments = [];
    for await (const assignment of authClient.roleAssignments.list()) {
        roleAssignments.push(assignment);
    }
    return roleAssignments;
}

// Main process
(async () => {
    try {
        console.log("Fetching all subscriptions in the tenant...");
        const subscriptions = await getAllSubscriptions();
        console.log(`Found ${subscriptions.length} subscriptions.`);

        console.log("Fetching disabled Azure AD users...");
        const disabledUsers = await getDisabledUsers();
        console.log(`Found ${disabledUsers.length} disabled users.`);

        const results = [];
        for (const subscriptionId of subscriptions) {
            console.log(`Fetching role assignments for subscription: ${subscriptionId}`);
            const roleAssignments = await getRoleAssignments(subscriptionId);

            disabledUsers.forEach(user => {
                roleAssignments.forEach(assignment => {
                    if (assignment.principalId === user.id) {
                        results.push({
                            SubscriptionId: subscriptionId,
                            DisplayName: user.displayName,
                            UserPrincipalName: user.userPrincipalName,
                            Role: assignment.roleDefinitionName,
                            Scope: assignment.scope,
                        });
                    }
                });
            });
        }

        console.log(`Found ${results.length} disabled users with role assignments.`);
        console.table(results);
    } catch (err) {
        console.error("Error:", err);
    }
})();