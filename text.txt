# Define the list of subscriptions
$subscriptions = @(
    "subscription1-id",
    "subscription2-id",
    "subscription3-id",
    "subscription4-id",
    "subscription5-id",
    "subscription6-id",
    "subscription7-id"
)

# Define the CSV output file
$outputCsv = "WebServicesStatus.csv"

# Initialize the CSV file
"WebService,Subscription,HttpStatus,Owner" | Out-File -FilePath $outputCsv

# Function to check HTTP status
function Test-HttpStatus {
    param (
        [string]$url
    )
    try {
        $response = Invoke-WebRequest -Uri $url -UseBasicParsing -Method Head -ErrorAction Stop
        if ($response.StatusCode -eq 200) {
            return "Reachable"
        } else {
            return "Not Reachable"
        }
    } catch {
        return "Not Reachable"
    }
}

# Function to get the owner from tags
function Get-Owner {
    param (
        [Hashtable]$tags
    )

    $possibleTags = @("primary_contact", "PrimaryContact", "Primary_Contact", "primaryContact")

    foreach ($tag in $possibleTags) {
        if ($tags.ContainsKey($tag)) {
            return $tags[$tag]
        }
    }
    return $null
}

# Iterate through each subscription
foreach ($subscription in $subscriptions) {
    # Set the context to the current subscription
    Set-AzContext -SubscriptionId $subscription

    # Get all web services in the subscription
    $webServices = Get-AzResource -ResourceType "Microsoft.Web/sites"

    foreach ($webService in $webServices) {
        $url = "http://" + $webService.Name
        $httpStatus = Test-HttpStatus -url $url

        # Attempt to get the owner from the web service tags
        $owner = Get-Owner -tags $webService.Tags

        # If owner is not found, check the resource group tags
        if (-not $owner) {
            $resourceGroup = Get-AzResourceGroup -Name $webService.ResourceGroupName
            $owner = Get-Owner -tags $resourceGroup.Tags
        }

        # Write the result to the CSV file
        $result = "$($webService.Name),$subscription,$httpStatus,$owner"
        $result | Out-File -FilePath $outputCsv -Append
    }
}

Write-Host "Web service status check completed. Results saved to $outputCsv"